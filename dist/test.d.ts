// Generated by dts-bundle-generator v9.5.1

import { TypeCheck } from '@sinclair/typebox/compiler';

export declare const fake: {
	name: () => string;
	words: (min: number, max: number) => string;
	id: () => string;
	boolean: () => boolean;
	integer: (min: number, max: number) => number;
	float: (min: number, max: number) => number;
	string: (min: number, max: number) => string;
	email: () => string;
	ip: () => string;
	url: () => string;
	randomInArray: <T>(array: T[]) => T;
	randomsInArray: <T>(array: T[], count?: number | {
		min: number;
		max: number;
	}) => T[];
	date: {
		anytime: () => Date;
		past: (days?: number, refDate?: string | Date | number) => Date;
		future: (days?: number, refDate?: string | Date | number) => Date;
		between: (start: Date, end: Date) => Date;
		timezone: () => string;
	};
};
export interface ModelTestCase {
	testName: string;
	goodValues: unknown[];
	badValues: unknown[];
	check: TypeCheck<TSchema>;
}
export declare const testModel: (tests: ModelTestCase[]) => void;

export {};
